name: Publish Docker images to GHCR

on:
  push:
    branches:
      - main
      - 'release/*'
  pull_request:
    branches:
      - main

permissions:
  contents: write
  packages: write

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Prepare image names
        run: |
          echo "TORCHSERVE_IMAGE=ghcr.io/${{ github.repository_owner }}/torchserve:latest" >> $GITHUB_ENV
          echo "WEB_BACKEND_IMAGE=ghcr.io/${{ github.repository_owner }}/web_backend:latest" >> $GITHUB_ENV
          echo "WEB_FRONTEND_IMAGE=ghcr.io/${{ github.repository_owner }}/web_frontend:latest" >> $GITHUB_ENV
          echo "DATA_PROCESSING_IMAGE=ghcr.io/${{ github.repository_owner }}/data_processing:latest" >> $GITHUB_ENV

      - name: Build and push torchserve image
        uses: docker/build-push-action@v4
        with:
          context: Docker/model_store/
          file: Docker/model_store/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.TORCHSERVE_IMAGE }}

      - name: Build and push web_backend image
        uses: docker/build-push-action@v4
        with:
          context: Docker/web/backend/
          file: Docker/web/backend/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.WEB_BACKEND_IMAGE }}

      - name: Build and push web_frontend image
        uses: docker/build-push-action@v4
        with:
          context: Docker/web/frontend
          file: Docker/web/frontend/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.WEB_FRONTEND_IMAGE }}

      - name: Build and push data_processing image
        uses: docker/build-push-action@v4
        with:
          context: Docker/data_processing/
          file: Docker/data_processing/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.DATA_PROCESSING_IMAGE }}
    

      - name: Update docker-compose.yml
        if: github.event_name != 'pull_request'
        run: |
          sed -i 's|image: covesecurity/torchserve:latest|image: ${{ env.TORCHSERVE_IMAGE }}|g' Docker/docker-compose.yml
          sed -i 's|image: covesecurity/web_backend:latest|image: ${{ env.WEB_BACKEND_IMAGE }}|g' Docker/docker-compose.yml
          sed -i 's|image: covesecurity/web_frontend:latest|image: ${{ env.WEB_FRONTEND_IMAGE }}|g' Docker/docker-compose.yml
          sed -i 's|image: covesecurity/data_processing:latest|image: ${{ env.DATA_PROCESSING_IMAGE }}|g' Docker/docker-compose.yml

      - name: Commit and push updated docker-compose.yml
        if: github.event_name != 'pull_request'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add Docker/docker-compose.yml
          git commit -m "Update docker-compose.yml with latest image tags" || echo "No changes to commit"
          git push